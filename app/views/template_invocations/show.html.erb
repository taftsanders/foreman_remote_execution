<% items = [{ :caption => _('Job invocations'), :url => job_invocations_path },
            { :caption => @template_invocation.job_invocation.description,
              :url => job_invocation_path(@template_invocation.job_invocation_id) }]

if @host
  items << { :caption => _('Template Invocation for %s') % @host.name }
  breadcrumbs(:resource_url => template_invocations_api_job_invocation_path(@template_invocation.job_invocation_id),
               :name_field => 'host_name',
               :switcher_item_url => template_invocation_path(':id'),
               :items => items)
else
  breadcrumbs(items: items, switchable: false)
end
%>

<% stylesheet 'foreman_remote_execution/foreman_remote_execution' %>
<% javascript 'foreman_remote_execution/template_invocation' %>

<div id="title_action">
  <div class="btn-toolbar pull-right">
    <%= button_group(link_to(_('Back to Job'), job_invocation_path(@template_invocation.job_invocation), :class => 'btn btn-default'),
                    (link_to(_('Rerun'), rerun_job_invocation_path(@template_invocation.job_invocation, :host_ids => [ @host.id ]), :class => 'btn btn-default') if authorized_for(:permission => :create_job_invocations))) %>
    <%= button_group(link_to_function(_('Toggle command'), '$("div.preview").toggle()', :class => 'btn btn-default'),
                     link_to_function(_('Toggle STDERR'), '$("div.line.stderr").toggle()', :class => 'btn btn-default'),
                     link_to_function(_('Toggle STDOUT'), '$("div.line.stdout").toggle()', :class => 'btn btn-default'),
                     link_to_function(_('Toggle DEBUG'), '$("div.line.debug").toggle()', :class => 'btn btn-default')) if @host %>
    <%= button_group(template_invocation_task_buttons(@template_invocation_task, @template_invocation.job_invocation)) %>
  </div>
</div>

<hr/>
  <% proxy_id = @template_invocation_task.input[:proxy_id] %>
  <% proxy = SmartProxy.find_by(id: proxy_id) if proxy_id %>
  <% so = ForemanRemoteExecution::StagedOutput.new(@template_invocation.job_invocation, @host, proxy) %>
  <% staged_output = so.output %>

<ol class="pf-c-progress-stepper pf-m-center">
  <% staged_output.each do |stage| %>
    <% status, icon = case stage.result
                      when 'done'
                        ['success', 'fa-check-circle']
                      when 'error'
                        ['danger', 'fa-exclamation-circle']
                      when 'pending'
                        ['pending', '']
                      when 'active'
                        ['info', 'pf-icon-in-progress']
                      end %>
    <li
      class="pf-c-progress-stepper__step pf-m-<%= status %>"
      aria-label="completed step,"
    >
      <div class="pf-c-progress-stepper__step-connector">
        <span class="pf-c-progress-stepper__step-icon">
          <i class="fas <%= icon %>" aria-hidden="true"></i>
        </span>
      </div>
      <div class="pf-c-progress-stepper__step-main">
        <div class="pf-c-progress-stepper__step-title"><%= stage.name %></div>
        <% if stage.resource %>
          <% link = stage.resource.is_a?(::Host::Base) ? current_host_details_path(stage.resource) : smart_proxy_path(stage.resource) %>
          <div class="pf-c-progress-stepper__step-description">
            <%= link_to(stage.resource.name, link) %>
          </div>
        <% end %>
      </div>
    </li>
  <% end %>
</ol>

<% if @host %>
  <h3>
    <%= _('Target: ') %><%= link_to(@host.name, current_host_details_path(@host)) %>
    <% if proxy_id && proxy = SmartProxy.find_by(id: proxy_id) %>
      <%= _('using Smart Proxy') %> <%= link_to(proxy.name, smart_proxy_path(proxy)) %>
    <% end %>
  </h3>

  <div class="preview hidden">
    <%= preview_box(@template_invocation, @host) %>
  </div>

  <div class="terminal" data-refresh-url="<%= template_invocation_path(@template_invocation) %>">
    <% if @error %>
      <div class="line error"><%= @error %></div>
    <% else %>
      <%= link_to_function(_('Scroll to bottom'), '$("html, body").animate({ scrollTop: $(document).height() }, "slow");', :class => 'pull-right scroll-link-bottom') %>

      <div class="printable">
        <%= render :partial => 'output_line_set', :collection => normalize_line_sets(@line_sets) %>
      </div>

      <%= link_to_function(_('Scroll to top'), '$("html, body").animate({ scrollTop: 0 }, "slow");', :class => 'pull-right scroll-link-top') %>
    <% end %>
  </div>

  <script>
    <%= render :partial => 'refresh.js' %>
  </script>
<% else %>
  <%= _("Could not display data for job invocation.") %>
<% end %>
